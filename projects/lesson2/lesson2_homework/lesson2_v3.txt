struct UserInfo{
    int userId;
    string name;
    string hashAddress;
}

struct Cat{
    int catId;
    string catName;
    float price;
    string32 dna;
}

struct HashTable_owning_relationship{
    int  key_userId;
    int[] value_catId;
}

private func generateDNA(catId){
    hash(timestamp, IPAddress, catId, randomNum);

}

public func getCatsByUser(string userHashAddress){
        int userId=getUserIdByUserHashAddress(userHashAddress);
        int[] catIds=getcats(userId);
        Cat[] cats=getCatsInfoByCatIds(catIds);
        return cats;
}

public func getCats(userId){
    HashTable_owning_relationship owningShip;
    int[] catIds;
    if userId=0{ 
        for (int i=0, i<owningShip.size();i++){
                    catIds=catIds+owningShip.value;
        } 
    }else{
        for (int i=0, i<owningShip.size();i++){
            if userId=owningShip.key{
                    return owningShip.value;
                }else{
                    return null;
                }
           }
    }
    Cat[] cats=getCatsInfoByCatIds(catIds);
    return cats;
}
