

# DNA生成

fn CreatDNA(dad:kitty, mon:kitty, timestamp) -> kitty{
     
    dna_random_seed= std::io::rand(); //产生随机数
    dna = blake2_128(dad.dna+mon.dna+timestamp+dna_random_seed); //把父母DNA，发送时间的timestamp,及上面产生的随机数，一同放在blake2_128哈希函数里，生成固定128长度的哈希值作为DNA

    Kitty(dna)//用dna数据生成一只新的猫


}



---------------------------------------------------------

修复kitty count的溢出可能性：


let count = Self::kitties_count();

if count >= (2^32-1){ //如果kitty猫已经满了，不允许再创建

    reuturn Err(String::from('Kitty已创建超额，不允许再创建了'))

}else{ //如果没满，正常生成新的猫放入map里，以及计数递增

    Kitties::insert(count, kitty);
    KittiesCount::put(count+1);
}
